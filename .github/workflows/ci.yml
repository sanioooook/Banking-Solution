name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        working-directory: ./BankingSolutionBackend
        run: dotnet restore

      - name: Run Unit Tests
        working-directory: ./BankingSolutionBackend
        run: dotnet test BankingSolution.Tests.Unit/ --verbosity normal

      - name: Run Integration Tests
        working-directory: ./BankingSolutionBackend
        run: dotnet test BankingSolution.Tests.Integration/ --verbosity normal

  docker:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: test

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag or fallback to latest
        id: version
        run: |
          VERSION=${GITHUB_REF##*/}
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} ./BankingSolutionBackend/

      - name: Push Docker image
        if: github.event_name == 'push'
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
